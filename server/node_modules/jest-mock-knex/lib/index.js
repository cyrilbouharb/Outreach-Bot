Object.defineProperty(exports,"__esModule",{value:true});exports.client=exports.parser=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};exports.default=








































































































mock;var _lodash=require('lodash');var _lodash2=_interopRequireDefault(_lodash);var _bluebird=require('bluebird');var _bluebird2=_interopRequireDefault(_bluebird);var _knex=require('knex/knex');var _knex2=_interopRequireDefault(_knex);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var trim=function trim(value){return _lodash2.default.trim(value,'` ');};var values=function values(value){return _lodash2.default.map(_lodash2.default.split(value,','),trim);};var parser=exports.parser=function parser(builder){var bindings=_lodash2.default.clone(builder.bindings);var sql=_lodash2.default.replace(builder.sql,/"|\?|\$[0-9]+/gi,function(key){if(['"'].indexOf(key)>-1)return'';var value=bindings.shift();if(_lodash2.default.isDate(value))return'DATE';if(_lodash2.default.isArray(value))return'['+value.join(',')+']';if(_lodash2.default.isPlainObject(value))return JSON.stringify(value);return value;});var vSQL=builder.sql.replace(/"/g,'');var method=/^(select|insert|update|delete) (.*from |into |)([\w_-]+)/i.exec(vSQL);if(!method)return{method:builder.method,sql:sql};var vBindings=_lodash2.default.clone(builder.bindings);var vBinding=function vBinding(key){if(key!=='?')return key;var value=vBindings.shift();return _lodash2.default.isDate(value)?'DATE':value;};var map={};if(method[1]==='insert'){var result=/\(([^)]+)\) values \(([^)]+)\)/i.exec(vSQL);_lodash2.default.assign(map,_lodash2.default.zipObject(values(result[1]),_lodash2.default.map(values(result[2]),vBinding)));}else{var sqler={};var _result=_lodash2.default.split(vSQL,/(set|where|order by|group by|limit)/gi);for(var idx=_result.length-1;idx>0;idx-=2){sqler[_lodash2.default.camelCase(_result[idx-1])]=_result[idx];}if(sqler.set){_lodash2.default.split(sqler.set,',').forEach(function(item){var setResult=/^(.+)=(.+)$/i.exec(item);if(setResult)map[trim(setResult[1])]=vBinding(_lodash2.default.trim(setResult[2]));});}if(sqler.where){_lodash2.default.split(sqler.where,/ and | or /i).forEach(function(item){var whereResult=/^(.+)(>?<?!?=|<?>|<|is|in|@@)(.+)$/i.exec(item);if(whereResult){var value=_lodash2.default.trim(whereResult[3],' \'');var valueIn=/^\(([\w?, ]+)\)$/i.exec(value);map[trim(whereResult[1])]=valueIn?_lodash2.default.map(values(valueIn[1]),vBinding):vBinding(value);}});}if(sqler.orderBy)map.orderBy=_lodash2.default.trim(sqler.orderBy).replace(/\?/g,vBinding);if(sqler.groupBy)map.groupBy=_lodash2.default.trim(sqler.groupBy).replace(/\?/g,vBinding);if(sqler.limit)map.limit=Number(_lodash2.default.trim(sqler.limit).replace(/\?/g,vBinding));if(sqler.offset)map.offset=Number(_lodash2.default.trim(sqler.offset).replace(/\?/g,vBinding));}return _extends({},map,{method:method[1],table:method[3],sql:sql});};var client=exports.client=jest.fn(function(){return false;});client.mockName='knex';client.toJSON=function(){return _lodash2.default.map(client.mock.calls,function(item){return item[0].sql;});};function query(connection,builder){var fn=client(parser(builder));if(_lodash2.default.isArray(fn)){return _bluebird2.default.resolve({response:fn});}if(fn instanceof Error){return _bluebird2.default.reject(fn);}if(!this._query)return _bluebird2.default.resolve({response:[]});return this.__query(connection,builder);}var MockClient=function(_knex$Client){_inherits(MockClient,_knex$Client);function MockClient(){var _ref;var _temp,_this,_ret;_classCallCheck(this,MockClient);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=MockClient.__proto__||Object.getPrototypeOf(MockClient)).call.apply(_ref,[this].concat(args))),_this),_this.isMock=true,_temp),_possibleConstructorReturn(_this,_ret);}_createClass(MockClient,[{key:'releaseConnection',value:function releaseConnection(){return _bluebird2.default.resolve();}},{key:'acquireConnection',value:function acquireConnection(){return _bluebird2.default.resolve({__knexUid:1});}},{key:'processResponse',value:function processResponse(_ref2){var response=_ref2.response;return response;}},{key:'_query',value:function _query(){return query.apply(undefined,arguments);}}]);return MockClient;}(_knex2.default.Client);function mock(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{client:MockClient};
var db=(0,_knex2.default)(config);

if(!db.client.isMock){
_lodash2.default.set(db,'client.__query',db.client._query);
db.client._query=query;
}

return db;
}