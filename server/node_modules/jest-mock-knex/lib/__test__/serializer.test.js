var _this=this;var _bookshelf2=require('bookshelf');var _bookshelf3=_interopRequireDefault(_bookshelf2);
var _faker=require('faker');var _faker2=_interopRequireDefault(_faker);
var _=require('../');var _2=_interopRequireDefault(_);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}

var db=(0,_2.default)({
client:'sqlite',
connection:{filename:':memory:'},
useNullAsDefault:true});var _bookshelf=

(0,_bookshelf3.default)(db),Model=_bookshelf.Model;

var User=Model.extend({
tableName:'user',
hasTimestamps:true});


describe('serializer',function(){
it('client',function _callee(){var id,table,limit,name,value,at,builder;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:
id=99;
table='table';
limit=100;
name='justin';
value='caffee';
at=_faker2.default.date.future();

_.client.mockClear();
_.client.mockReturnValueOnce([]);
_.client.mockReturnValueOnce([]);
_.client.mockReturnValueOnce([]);
_.client.mockReturnValueOnce([]);

builder=db(table).
where({id:id,at:at}).
whereNull('deleted_at').
whereNotNull('nickname').
limit(limit);_context.next=14;return regeneratorRuntime.awrap(

builder.select('*'));case 14:_context.next=16;return regeneratorRuntime.awrap(
builder.insert({name:name,value:value,at:at}));case 16:_context.next=18;return regeneratorRuntime.awrap(
builder.update({name:name,value:value,at:at}));case 18:_context.next=20;return regeneratorRuntime.awrap(
builder.delete());case 20:

expect(_.client).toMatchSnapshot();case 21:case'end':return _context.stop();}}},null,_this);});


it('bookshelf',function _callee2(){var id,name,value,at;return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:
id=99;
name='justin';
value='caffee';
at=_faker2.default.date.future();

_.client.mockClear();
_.client.mockReturnValueOnce([]);
_.client.mockReturnValueOnce([]);
_.client.mockReturnValueOnce([]);
_.client.mockReturnValueOnce([]);_context2.next=11;return regeneratorRuntime.awrap(

User.fetchAll());case 11:_context2.next=13;return regeneratorRuntime.awrap(
new User({at:at,name:name,value:value}).save());case 13:_context2.next=15;return regeneratorRuntime.awrap(
new User({id:id,at:at,name:name,value:value}).save());case 15:_context2.next=17;return regeneratorRuntime.awrap(
new User({id:id}).destroy());case 17:

expect(_.client).toMatchSnapshot();case 18:case'end':return _context2.stop();}}},null,_this);});

});